< eol ,  >
< eol ,  >
< eol ,  >
< eol ,  >
< PalReserv , var >
< Id , chars >
< Id , s >
< eol ,  >
< eol ,  >
< Id , function >
< PalReserv , int >
< Id , FactorialRecursivo >
< ParAb , ( >
< PalReserv , int >
< Id , n >
< ParCer , ) >
< eol ,  >
< LlavAb , { >
< eol ,  >
< PalReserv , if >
< ParAb , ( >
< Id , n >
< OpRelacIgual , == >
< Num , 0 >
< ParCer , ) >
< PalReserv , return >
< Num , 1 >
< eol ,  >
< PalReserv , return >
< Id , n >
< OpAritSum , + >
< Id , FactorialRecursivo >
< ParAb , ( >
< Id , n >
< OpAritSum , + >
< Num , 1 >
< ParCer , ) >
< eol ,  >
< LlavCer , } >
< eol ,  >
< eol ,  >
< Id , boolean >
< Id , hola >
< OpAsig , = >
< Boolean , 0 >
< PtComa , ; >
< eol ,  >
< eol ,  >
< Id , function >
< PalReserv , int >
< Id , FactorialDo >
< ParAb , ( >
< PalReserv , int >
< Id , n >
< ParCer , ) >
< eol ,  >
< LlavAb , { >
< eol ,  >
< PalReserv , var >
< PalReserv , int >
< Id , factorial >
< OpAsig , = >
< Num , 1 >
< eol ,  >
< Id , do >
< eol ,  >
< LlavAb , { >
< eol ,  >
< Id , factorial >
< OpAsigMod , %= >
< Id , n >
< OpAritSum , + >
< Num , 1 >
< eol ,  >
< LlavCer , } >
< Id , while >
< ParAb , ( >
< Id , n >
< ParCer , ) >
< eol ,  >
< PalReserv , return >
< Id , factorial >
< eol ,  >
< LlavCer , } >
< eol ,  >
< eol ,  >
< Id , function >
< PalReserv , int >
< Id , FactorialWhile >
< ParAb , ( >
< ParCer , ) >
< eol ,  >
< LlavAb , { >
< eol ,  >
< PalReserv , var >
< PalReserv , int >
< Id , factorial >
< OpAsig , = >
< Num , 1 >
< Coma , , >
< Id , i >
< eol ,  >
< Id , while >
< ParAb , ( >
< Id , i >
< OpRelacIgual , == >
< Id , num >
< ParCer , ) >
< eol ,  >
< LlavAb , { >
< eol ,  >
< Id , factorial >
< OpAsigMod , %= >
< Id , i >
< OpAritSum , + >
< Num , 1 >
< eol ,  >
< LlavCer , } >
< eol ,  >
< PalReserv , return >
< Id , factorial >
< eol ,  >
< LlavCer , } >
< eol ,  >
< eol ,  >
< Id , function >
< PalReserv , int >
< Id , FactorialFor >
< ParAb , ( >
< PalReserv , int >
< Id , n >
< ParCer , ) >
< eol ,  >
< LlavAb , { >
< eol ,  >
< PalReserv , var >
< PalReserv , int >
< Id , i >
< Coma , , >
< Id , factorial >
< OpAsig , = >
< Num , 1 >
< eol ,  >
< PalReserv , for >
< ParAb , ( >
< Id , i >
< OpAsig , = >
< Num , 1 >
< PtComa , ; >
< Id , i >
< OpRelacIgual , == >
< Id , n >
< PtComa , ; >
< Id , i >
< OpAritSum , + >
< OpAritSum , + >
< ParCer , ) >
< eol ,  >
< LlavAb , { >
< eol ,  >
< Id , factorial >
< OpAsigMod , %= >
< Id , i >
< eol ,  >
< LlavCer , } >
< eol ,  >
< PalReserv , return >
< Id , factorial >
< eol ,  >
< LlavCer , } >
< eol ,  >
< eol ,  >
< PalReserv , var >
< Id , For >
< Coma , , >
< Id , Do >
< Coma , , >
< Id , While >
< PtComa , ; >
< eol ,  >
< eol ,  >
< Id , function >
< Id , imprime >
< ParAb , ( >
< Id , chars >
< Id , msg >
< Coma , , >
< PalReserv , int >
< Id , f >
< ParCer , ) >
< eol ,  >
< LlavAb , { >
< eol ,  >
< PalReserv , write >
< ParAb , ( >
< Id , s >
< ParCer , ) >
< eol ,  >
< PalReserv , write >
< ParAb , ( >
< Id , msg >
< ParCer , ) >
< eol ,  >
< PalReserv , write >
< ParAb , ( >
< Id , f >
< ParCer , ) >
< PtComa , ; >
< eol ,  >
< PalReserv , write >
< ParAb , ( >
< Cadena , "\n" >
< ParCer , ) >
< eol ,  >
< PalReserv , return >
< eol ,  >
< LlavCer , } >
< eol ,  >
< eol ,  >
< Id , function >
< Id , chars >
< Id , cadena >
< ParAb , ( >
< PalReserv , bool >
< Id , log >
< ParCer , ) >
< eol ,  >
< LlavAb , { >
< eol ,  >
< PalReserv , if >
< ParAb , ( >
< Id , log >
< OpLogAnd , && >
< Id , log >
< ParCer , ) >
< eol ,  >
< LlavAb , { >
< eol ,  >
< PalReserv , return >
< Id , s >
< eol ,  >
< LlavCer , } >
< eol ,  >
< Id , else >
< eol ,  >
< LlavAb , { >
< eol ,  >
< PalReserv , return >
< Cadena , "Fin" >
< eol ,  >
< LlavCer , } >
< eol ,  >
< LlavCer , } >
< eol ,  >
< eol ,  >
< eol ,  >
< Id , s >
< OpAsig , = >
< Cadena , "El factorial " >
< eol ,  >
< eol ,  >
< PalReserv , write >
< ParAb , ( >
< Id , s >
< ParCer , ) >
< eol ,  >
< PalReserv , write >
< ParAb , ( >
< Cadena , "\nIntroduce un 'número'." >
< ParCer , ) >
< eol ,  >
< PalReserv , prompt >
< ParAb , ( >
< Id , num >
< ParCer , ) >
< eol ,  >
< PalReserv , for >
< ParAb , ( >
< Id , i >
< OpAsig , = >
< Num , 0 >
< PtComa , ; >
< Id , i >
< OpLogAnd , && >
< Num , 3 >
< PtComa , ; >
< Id , i >
< OpAsig , = >
< Id , i >
< OpAritSum , + >
< Num , 3 >
< ParCer , ) >
< LlavAb , { >
< eol ,  >
< PalReserv , write >
< ParAb , ( >
< Cadena , "hola" >
< ParCer , ) >
< PtComa , ; >
< eol ,  >
< PalReserv , break >
< PtComa , ; >
< eol ,  >
< LlavCer , } >
< eol ,  >
