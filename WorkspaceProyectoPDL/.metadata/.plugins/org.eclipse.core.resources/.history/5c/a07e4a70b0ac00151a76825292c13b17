grammar AnalizLex;

options
{
}

//as the generated lexer will reside in org.meri.antlr_step_by_step.parsers 
//package, we have to add package declaration on top of it
@lexer::header {
package analizadorlex;
}

//as the generated parser will reside in org.meri.antlr_step_by_step.parsers 
//package, we have to add package declaration on top of it
@parser::header {
package analizadorlex;
}

// ***************** lexer rules:
//the grammar must contain at least one lexer rule

S	: ';' | ',' | '(' | ')' | '{' | '}' | '+' | EOF | LETRA A | DIGITO D | '=' E | '&' F | '"' C | '/' B | '%' M | DEL S;
A	: LETRA A | DIGITO Ap | '_' Ap | ;
Ap	: LETRA Ap | DIGITO Ap | '_' Ap | ;
D	: DIGITO D | ;
E	: '=' | ;
F	: '&';
C	: TEXTSTRING C | '"';
B	: '*' Bp;
Bp	: TEXTCOMMENT1 Bp | '*' Bpp;
Bpp	: '/' S | TEXTCOMMENT2 Bp | '*' Bpp;
M	: '=';
fragment
DEL  : [ \t\r\n];
fragment 
LETRA	: [a-zA-Z];
fragment
DIGITO	: [0-9];
fragment
TEXTSTRING : ~[\"];
fragment
TEXTCOMMENT1 : ~[\*];
fragment
TEXTCOMMENT2 : ~[\*/];

// ***************** parser rules:
//our grammar accepts only salutation followed by an end symbol
expression : SALUTATION ENDSYMBOL;
